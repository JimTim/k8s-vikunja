apiVersion: apps/v1  
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/service: database
spec:
  serviceName: "postgres"
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/service: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/service: database
    spec:
      containers:
        - name: postgres
          image: postgres
          env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: username
                name: postgres
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: postgres
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                key: database
                name: postgres
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources:
            requests:
              memory: "128M"
              cpu: "100m"
            limits:
              memory: "1024M"
              cpu: "1000m"
          volumeMounts:
            - name: postgres
              mountPath: /var/lib/postgresql/data
              subPath: pgdata
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      volumes:
        - name: postgres
          persistentVolumeClaim:
            claimName: postgres